@model IEnumerable<Vidly.Models.Customer>
@*
    Note: I've set the model for this view to IEnumerable<Customer>.
    This is a simple interface implemented by the list class. Since
    in this view we only want to iterate over this list, and we don't
    need any of the operations in the List class (eg Add, Remove, etc),
    it's better to use the IEnumerable interface, which allows use to
    iterate over the list. If in the future, we replace the List with a
    different data structure, as long as it is enumerable, our view code
    will remain unchanged.
*@

@{
    ViewBag.Title = "Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>

@* We won't check if there are any customers here, but rather in the datable plugin part of
    the code.*@
<table id="customers" class="table table-bordered table-hover">
    <thead>
    <tr>
        <th>Customer</th>
        <th>Membership Type</th>
        <th>Delete</th>
    </tr>
    </thead>
    <tbody>
    </tbody>
</table>

@section scripts{
    <script>
        //Makes sure the page is ready for DOM manipulation
        $(document).ready(function () {
            $("#customers").DataTable({
                ajax: {
                    url: "/api/customers",
                    //Because our Api response is an array of objects that represent the customer's information
                    //If the Api response was containing an array of customers as a property, then we would have
                    //to send it to that array, by giving the dataSrc attribute the string 
                    dataSrc:""
                },
                columns: [
                    {
                        data: "name",
                        render: function(data, type, customer) {
                            return "<a href='/customers/edit" + customer.id + "'>" + customer.name + "</a>";
                        }
                    },
                    {
                        //data shows the DataTable plugin where to get the data from 
                        data:"name"
                    },
                    {
                        data: "id",
                        //renders each row in the table
                        render: function(data) {
                            return "<button class='btn-link js-delete' data-customer-id=" + data + ">Delete</button>";
                        }
                    }
                ]
            });

            $("#customers").on("click", ".js-delete", function () {
                var button = $(this);
                bootbox.confirm("Are you sure you want to delete this customer?",
                    function() {
                        if (result) {
                            $.ajax({
                                url: "/api/customers/" + button.attr("data-customer-id"),
                                method: "DELETE",
                                success: function() {
                                    button.parents("tr").remove();
                                }
                            });
                        }
                    });
            });
        });
    </script>
}



